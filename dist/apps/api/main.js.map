{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/api/src/app/app.controller.ts","webpack:///./apps/api/src/app/app.module.ts","webpack:///./apps/api/src/app/app.service.ts","webpack:///./apps/api/src/app/corona/corona.controller.ts","webpack:///./apps/api/src/app/corona/corona.entity.ts","webpack:///./apps/api/src/app/corona/corona.module.ts","webpack:///./apps/api/src/app/corona/corona.service.ts","webpack:///./apps/api/src/app/flight/flight.controller.ts","webpack:///./apps/api/src/app/flight/flight.entity.ts","webpack:///./apps/api/src/app/flight/flight.module.ts","webpack:///./apps/api/src/app/flight/flight.service.ts","webpack:///./apps/api/src/main.ts","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Module } from '@nestjs/common';\r\n\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\n\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { FlightModule } from './flight/flight.module';\r\nimport { Flight } from './flight/flight.entity';\r\nimport { CoronaModule } from './corona/corona.module';\r\nimport { Corona } from './corona/corona.entity';\r\n\r\n\r\n@Module({\r\n  imports: [\r\n    FlightModule,\r\n    CoronaModule,\r\n    TypeOrmModule.forRoot({\r\n      type: 'sqlite',\r\n      database:  \"flights.db\",\r\n      synchronize: false,\r\n      migrationsRun: false,\r\n      entities: [\r\n        Flight, Corona\r\n      ],\r\n   }),\r\n  ],\r\n  controllers: [AppController],\r\n  providers: [AppService],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@nestjs/common'; \n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to api!' };\n  }\n}\n","import { Controller, Get } from \"@nestjs/common\";\r\nimport { Corona } from \"./corona.entity\";\r\nimport { CoronaService } from \"./corona.service\";\r\n\r\n@Controller('corona')\r\nexport class CoronaController {\r\n    \r\n    constructor(private coronaService: CoronaService) {}\r\n\r\n    @Get()\r\n    getCoronaValues(): Promise<Corona[]> {\r\n      return this.coronaService.findAll();\r\n    }    \r\n}\r\n","import { Column, Entity, PrimaryColumn } from \"typeorm\";\r\n\r\n@Entity({\r\n    name: 'corona_state'\r\n})\r\nexport class Corona {\r\n\r\n    @PrimaryColumn()\r\n    _rowid_: string;\r\n\r\n    @Column()\r\n    date: string;\r\n\r\n    @Column()\r\n    state: string;\r\n\r\n    @Column()\r\n    fips_state: string;\r\n\r\n    @Column()\r\n    cases: number;\r\n\r\n    @Column()\r\n    deaths: number;\r\n\r\n    @Column()\r\n    population: number;\r\n\r\n    @Column()\r\n    cases_perc: number;\r\n\r\n}","import { Module } from \"@nestjs/common\";\r\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\r\nimport { CoronaController } from \"./corona.controller\";\r\nimport { Corona } from \"./corona.entity\";\r\nimport { CoronaService } from \"./corona.service\";\r\n\r\n@Module({\r\n    imports: [TypeOrmModule.forFeature([Corona])],\r\n    providers: [CoronaService],\r\n    controllers: [CoronaController]\r\n  })\r\n  export class CoronaModule {}","\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from \"typeorm\";\r\nimport { Corona } from './corona.entity'; \r\n\r\n@Injectable()\r\nexport class CoronaService {\r\n  constructor(\r\n    @InjectRepository(Corona)\r\n    private readonly coronaRepository: Repository<Corona>\r\n  ) {\r\n  }\r\n\r\n  async findAll(): Promise<Corona[]> {\r\n    return await this.coronaRepository.find();\r\n  }\r\n}","import { Controller, Get, Param } from \"@nestjs/common\";\r\nimport { Flight } from \"./flight.entity\";\r\nimport { FlightService } from \"./flight.service\";\r\n\r\n@Controller('flight')\r\nexport class FlightsController {\r\n    constructor(private readonly flightService: FlightService) {}\r\n\r\n    @Get()\r\n    getFlights(): Promise<Flight[]> {\r\n      return this.flightService.findAll();\r\n    }\r\n\r\n    @Get(':origin/:dest')\r\n    getFlightByOriginDest(@Param() data: {origin: string, dest: string}): Promise<Flight[]> {\r\n      return this.flightService.getFlightsByOriginDest(data.origin, data.dest);\r\n\r\n    }\r\n\r\n    @Get('/count')\r\n    groupFlightsByOrigin() {\r\n\r\n      return this.flightService.getFlightsGroupedByOrigin();\r\n    }\r\n}","\r\n\r\nimport { Column, Entity, PrimaryColumn } from \"typeorm\";\r\n\r\n@Entity({\r\n    name: 'filtered_flights_final'\r\n})\r\nexport class Flight { \r\n    @PrimaryColumn()\r\n    _rowid_: string;\r\n\r\n    @Column()\r\n    dep_time: number;\r\n    \r\n    @Column()\r\n    year: number;\r\n\r\n    @Column()\r\n    month: number;\r\n    \r\n\r\n    @Column()\r\n    day_of_month: number;\r\n\r\n    @Column()\r\n    mkt_carrier_name: string;\r\n\r\n    @Column()\r\n    origin: string;\r\n\r\n    @Column()\r\n    origin_city: string;\r\n\r\n    @Column()\r\n    origin_airport_name: string;\r\n\r\n    @Column()\r\n    dest: string;\r\n\r\n    @Column()\r\n    dest_city: string;\r\n\r\n    @Column()\r\n    dep_delay: number;\r\n\r\n    @Column()\r\n    arr_delay: number;\r\n\r\n    @Column()\r\n    cancellation_description: string;\r\n\r\n    @Column()\r\n    fl_date: string;\r\n\r\n    @Column()\r\n    time_of_day: string;\r\n\r\n    @Column()\r\n    distance: number;\r\n\r\n    @Column()\r\n    origin_state_fips: number;\r\n\r\n    @Column()\r\n    dest_state_fips: number;\r\n}","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Flight } from './flight.entity';\r\nimport { FlightService } from './flight.service';\r\nimport { FlightsController } from './flight.controller';\r\n\r\n@Module({\r\n  imports: [TypeOrmModule.forFeature([Flight])],\r\n  providers: [FlightService],\r\n  controllers: [FlightsController],\r\n})\r\nexport class FlightModule {}","import { Injectable } from \"@nestjs/common\";\r\nimport { InjectRepository } from \"@nestjs/typeorm\";\r\nimport { Repository } from \"typeorm\";\r\nimport { Flight } from \"./flight.entity\";\r\n\r\n@Injectable()\r\nexport class FlightService {\r\n  constructor(\r\n    @InjectRepository(Flight)\r\n    private readonly flightRepository: Repository<Flight>) {\r\n    }\r\n\r\n  async findAll(): Promise<Flight[]> {\r\n    return await this.flightRepository.find();\r\n  }\r\n\r\n  async getFlightsByOriginDest(origin: string, dest: string): Promise<Flight[]> {\r\n    const result = await this.flightRepository.find({ origin, dest });\r\n\r\n    return result;\r\n  }\r\n\r\n  async getFlightsGroupedByOrigin() {\r\n\r\n    const result = await this.flightRepository.query('SELECT origin as origin, dest as destination, COUNT(_rowid_) as count from FILTERED_FLIGHTS_FINAL GROUP BY origin;');\r\n    return result;\r\n  }\r\n}","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");"],"sourceRoot":""}